(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[217],{4187:(t,e,a)=>{Promise.resolve().then(a.bind(a,5942))},5746:(t,e,a)=>{"use strict";a.d(e,{A:()=>_});var n=a(5155),i=a(2115),l=a(6850),r=a(8982),c=a(2316),o=a(8998),s=a(9561),d=a(152),u=a(1050),C=a(7439);let _=()=>{let{signer:t,account:e}=(0,i.useContext)(l.b),[a,_]=(0,i.useState)(""),[A,S]=(0,i.useState)(""),h=async()=>{if(!t){alert("Please connect your wallet.");return}let n=C.P.UNISWAP_V2_CONTRACT_ADDRESS,i=new r.NZ(n,["function addLiquidity(uint256 amount0, uint256 amount1) external"],t);try{let t=(0,c.XS)(a,18),n=(0,c.XS)(A,6),l=await i.addLiquidity(t,n);await l.wait(),alert("Liquidity added successfully");let r={hash:l.hash,description:"Added liquidity: ".concat(a," MockERC20 and ").concat(A," MOCK_USDC"),timestamp:Math.floor(Date.now()/1e3)},o=localStorage.getItem("tx_".concat(e)),s=o?JSON.parse(o):[];s.unshift(r),localStorage.setItem("tx_".concat(e),JSON.stringify(s))}catch(t){console.error("Add liquidity failed:",t),alert("Add liquidity failed")}};return(0,n.jsxs)(o.A,{sx:{marginY:4},children:[(0,n.jsx)(s.A,{variant:"h5",gutterBottom:!0,children:"Add Liquidity"}),(0,n.jsx)(d.A,{label:"MockERC20 Amount",type:"number",value:a,onChange:t=>_(t.target.value),fullWidth:!0,margin:"normal"}),(0,n.jsx)(d.A,{label:"MOCK_USDC Amount",type:"number",value:A,onChange:t=>S(t.target.value),fullWidth:!0,margin:"normal"}),(0,n.jsx)(u.A,{variant:"contained",color:"primary",onClick:h,children:"Add Liquidity"})]})}},7439:(t,e,a)=>{"use strict";a.d(e,{P:()=>n});let n={UNISWAP_V2_CONTRACT_ADDRESS:"YOUR_UNISWAP_V2_CONTRACT_ADDRESS",MOCKERC20_ADDRESS:"YOUR_MOCKERC20_ADDRESS",MOCK_USDC_ADDRESS:"YOUR_MOCK_USDC_ADDRESS",INFURA_PROJECT_ID:"YOUR_INFURA_PROJECT_ID"}},6850:(t,e,a)=>{"use strict";a.d(e,{Web3ProviderContext:()=>C,b:()=>s});var n=a(5155),i=a(2115),l=a(8808),r=a(2743),c=a(9521),o=a(7439);let s=(0,i.createContext)({provider:null,signer:null,account:null,connectMetaMask:()=>{},connectWalletConnect:()=>{},disconnect:()=>{}}),d=new r.sf({supportedChainIds:[5]}),u=new c.FK({rpc:{5:"https://goerli.infura.io/v3/".concat(o.P.INFURA_PROJECT_ID)},qrcode:!0}),C=t=>{let{children:e}=t,[a,r]=(0,i.useState)(null),[c,o]=(0,i.useState)(null),[C,_]=(0,i.useState)(null),A=async()=>{try{await d.activate();let t=new l.k(window.ethereum),e=await t.getSigner(),a=await e.getAddress();r(t),o(e),_(a)}catch(t){console.error("MetaMask connection failed:",t)}},S=async()=>{try{await u.activate();let t=await u.getProvider(),e=new l.k(t),a=await e.getSigner(),n=await a.getAddress();r(e),o(a),_(n)}catch(t){console.error("WalletConnect connection failed:",t)}},h=async()=>{try{await d.deactivate(),await u.deactivate(),r(null),o(null),_(null)}catch(t){console.error("Disconnect failed:",t)}};return(0,i.useEffect)(()=>{},[]),(0,n.jsx)(s.Provider,{value:{provider:a,signer:c,account:C,connectMetaMask:A,connectWalletConnect:S,disconnect:h},children:e})}},5942:(t,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>c});var n=a(5155);a(2115);var i=a(5746),l=a(8998),r=a(9561);let c=()=>(0,n.jsxs)(l.A,{children:[(0,n.jsx)(r.A,{variant:"h4",gutterBottom:!0,children:"Manage Liquidity"}),(0,n.jsx)(i.A,{})]})}},t=>{var e=e=>t(t.s=e);t.O(0,[936,155,862,441,517,358],()=>e(4187)),_N_E=t.O()}]);